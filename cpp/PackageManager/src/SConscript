# Copyright (c) 2013, AllSeen Alliance. All rights reserved.
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

Import('gateway_env')
import os.path

gwpkg_env = gateway_env.Clone()

def filtered_glob(env, pattern, omit=[], ondisk=True, source=False, strings=False):
   return filter(
         lambda f: os.path.basename(f.path) not in omit,
         env.Glob(pattern))

gwpkg_env.AddMethod(filtered_glob, "FilteredGlob")

libs = []

excluded = ['pmcl.cc', 'pmgtest.cc']
srcs = gwpkg_env.FilteredGlob('*.cc', excluded)

objs = gwpkg_env.Object(srcs)
libs.append(gwpkg_env.StaticLibrary('alljoyn_gwpkgmanager', objs))

# Shared library
if gwpkg_env.get('LIBTYPE', 'static') != 'static':
    shobjs = gwpkg_env.SharedObject(srcs)
    libs.append(gwpkg_env.SharedLibrary('alljoyn_gwpkgmanager', shobjs))

Return('libs')
